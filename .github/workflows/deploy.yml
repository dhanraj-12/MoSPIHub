name: CD for MoSPI

on:
  workflow_run:
    workflows: [CI for MoSPI]
    types: 
     - completed

jobs:
    deploy:
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'success' }} 


        steps:
            - name: checkout code
              uses: actions/checkout@v3

           
            
            - name: Deploy to Ec2
              uses: appleboy/ssh-action@v1.0.3
              with:
                host: ${{ secrets.EC2_HOST }}
                username: ${{ secrets.EC2_USER }}
                key: ${{ secrets.EC2_KEY }}
                port: 22
                script: |
                    # --- repo details ---
                    REPO_DIR=/home/ubuntu/MoSPIHub
                    REPO_URL=https://github.com/dhanraj-12/MoSPIHub

                    # --- clone or pull ---
                    if [ -d "$REPO_DIR/.git" ]; then
                      echo 'Repo exists, pulling latest changes...'
                      cd "$REPO_DIR"
                      git reset --hard
                      git pull origin main
                    else
                      echo 'Repo does not exist, cloning...'
                      git clone "$REPO_URL" "$REPO_DIR"
                    fi

                    # --- create .env ---
                    cat > "$REPO_DIR/backend/.env" << 'EOF'
                    PORT=${{ secrets.PORT }}
                    DB_USER=${{ secrets.DB_USER }}
                    DB_HOST=${{ secrets.DB_HOST }}
                    DATABASE=${{ secrets.DATABASE }}
                    DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                    RDSPORT=${{ secrets.RDSPORT }}
                    MONGO_URI=${{ secrets.MONGO_URI }}
                    EOF


                    #----export nvm path---
                    export NVM_DIR=~/.nvm
                    source ~/.nvm/nvm.sh
                    
                    # --- build backend ---
                    cd "$REPO_DIR/backend"
                    npm ci
                    npm run build

                    # --- build + deploy frontend ---
                    cd ../frontend
                    npm ci
                    npm run build
                    sudo rm -rf /var/www/html/*
                    sudo cp -r build/* /var/www/html

                    # --- start backend with pm2 ---
                    cd ../backend
                    pm2 restart all || pm2 start dist/index.js --name mospihub-backend


            
    


